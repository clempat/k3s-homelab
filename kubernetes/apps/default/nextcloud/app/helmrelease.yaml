---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 4.5.11
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    deploymentAnnotations:
      secret.reloader.stakater.com/reload: &secret nextcloud-secret
    image:
      flavor: fpm-alpine
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.25-alpine
    env:
      TZ: "${TIMEZONE}"
    nextcloud:
      securityContext:
        runAsUser: ${APP_UID}
        runAsGroup: ${APP_GID}
        runAsNonRoot: true
        readOnlyRootFilesystem: false
      extraInitContainers:
        - name: init-db
          image: "ghcr.io/onedr0p/postgres-init:16.1"
          envFrom:
            - secretRef:
                name: nextcloud-secret
      datadir: /var/www/data
      configs:
        local.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
               0 => '${SERVICE_CIDR}',
            ),
            'forwarded_for_headers' =>
            array (
              0 => 'HTTP_X_FORWARDED_FOR',
            ),
            'default_phone_region' => 'DE',
            'trashbin_retention_obligation' => 'auto, 30',
            'auth.bruteforce.protection.enabled' => true,
          );
        sso.config.php: |-
          <?php
          $CONFIG = array (
            'allow_user_to_change_display_name' => false,
            'lost_password_link' => 'disabled',
            'oidc_login_client_id' => getenv('OIDC_CLIENT_ID'),
            'oidc_login_client_secret' => getenv('OIDC_CLIENT_PASSWORD'),
            'oidc_login_provider_url' => 'https://${AUTH_HOSTNAME}/application/o/nextcloud/',
            'oidc_login_end_session_redirect' => true,
            'oidc_login_logout_url' => 'https://${AUTH_HOSTNAME}/application/o/nextcloud/end-session/',
            'oidc_login_default_quota' => '1000000000',
            'oidc_login_hide_password_form' => true,
            'oidc_login_disable_registration' => false,
            'oidc_login_webdav_enabled' => true,
            'oidc_login_attributes' => array (
                  'id' => 'sub',
                  'name' => 'name',
                  'mail' => 'email',
                  'quota' => 'nextcloudQuota',
                  'is_admin' => 'nextcloudAdmin',
              ),
            'oidc_login_scope' => 'openid profile email nextcloud',
            'oidc_login_default_group' => 'cloud',
            'oidc_create_groups' => true,
            'oidc_login_code_challenge_method' => 'S256',
            'oidc_login_auto_redirect' => true, //login?noredir=1
          );
        s3.config.php: |-
          <?php
          $CONFIG = array (
            'objectstore' => array(
              'class' => '\\OC\\Files\\ObjectStore\\S3',
              'arguments' => array(
                'hostname'       => '192.168.30.4',
                'port'           => 9001,
                'use_path_style' => true,
                'bucket'         => getenv('S3_ACCESS_KEY'),
                'autocreate'     => false,
                'key'            => getenv('S3_ACCESS_KEY'),
                'secret'         => getenv('S3_SECRET_KEY'),
                'use_ssl'        => true,
              ),
            ),
          );
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
        www.conf: |
          [www]
          user = www-data
          group = www-data
          listen = 127.0.0.1:9000
          pm = dynamic
          pm.max_children = 57
          pm.start_servers = 14
          pm.min_spare_servers = 14
          pm.max_spare_servers = 42
          pm.max_requests = 500
          pm.process_idle_timeout = 10s
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
      host: &host cloud.${SECRET_DOMAIN}
      mail:
        enabled: true
        fromAddress: admin
        domain: ${SECRET_DOMAIN}
        smtp:
          host: smtp.fastmail.com
          secure: ssl
          port: 587
          authtype: LOGIN
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres16-rw.database.svc.cluster.local.
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: INIT_POSTGRES_USER
        passwordKey: INIT_POSTGRES_PASS
    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: true
        existingSecret: *secret
        existingSecretPasswordKey: REDIS_PASSWORD
      master:
        persistence:
          enabled: false
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            memory: 100Mi
      commonConfiguration: |-
        # Enable AOF https://redis.io/topics/persistence#append-only-file
        appendonly yes
        # Disable RDB persistence, AOF persistence already enabled.
        save ""
        maxmemory 94371840
        maxmemory-policy allkeys-lru
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
          limits:
            memory: 20Mi
    metrics:
      enabled: false
      https: true
      serviceMonitor:
        enabled: false
    cronjob:
      enabled: true
      securityContext:
        runAsGroup: ${APP_GID}
    ingress:
      enabled: true
      className: internal
      annotations:
        # external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        hajimari.io/icon: mdi:dropbox
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix
      tls:
        - hosts:
            - *host
    persistence:
      enabled: true
      existingClaim: nextcloud-config

    startupProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 360
      successThreshold: 1
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1

    securityContext:
      fsGroupChangePolicy: OnRootMismatch
