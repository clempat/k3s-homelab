---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 4.5.11
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    annotations:
      reloader.stakater.com/auto: "true"
    image:
      flavor: fpm-alpine
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.25-alpine
    env:
      TZ: "${TIMEZONE}"
    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/haraldkoch/postgres-init:16.1@sha256:0412b8a443c0c6c7e8f7463c789fb1fe8ec632c8b6a68ddfe55cfb15d822083d
          envFrom:
            - secretRef:
                name: nextcloud-secret
      datadir: /var/www/data
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
               0 => '${SERVICE_CIDR}',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
            'overwrite.cli.url' => 'https://cloud.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https',
            'skeletondirectory' => '',
          );
      extraEnv:
        - name: REDIS_HOST
          value: redis-nextcloud.default.svc.cluster.local.
        - name: REDIS_HOST_PORT
          value: "6379"
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
      host: &host cloud.${SECRET_DOMAIN}
      mail:
        enabled: true
        fromAddress: admin
        domain: ${SECRET_DOMAIN}
        smtp:
          host: smtp.fastmail.com
          port: 587
          authtype: LOGIN
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres16-rw.database.svc.cluster.local.
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: INIT_POSTGRES_USER
        passwordKey: INIT_POSTGRES_PASS
    cronjob:
      enabled: true
    ingress:
      enabled: true
      className: internal
      annotations:
        # external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        hajimari.io/icon: mdi:dropbox
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix
      tls:
        - hosts:
            - *host
    persistence:
      enabled: true
      existingClaim: nextcloud-config
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-nfs
        accessMode: ReadWriteMany
    # this seems to be required for nextcloud initialization which takes a long time
    startupProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
